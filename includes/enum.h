#pragma once

typedef enum {
	CMD_INIT,
	CMD_RUN,
	CMD_BUILD,
	CMD_HELP,
} CMD_OPTION;

typedef enum {
	TOKEN_FUNC, TOKEN_VAR,
	TOKEN_IDENTIFIER,
	TOKEN_INTEGER, TOKEN_FLOAT,

	// punctuations
	TOKEN_OPAREN, TOKEN_CPAREN,
	TOKEN_OCURLY, TOKEN_CCURLY,
	TOKEN_COMMA,
	TOKEN_SEMI, TOKEN_COLON,

	// operators
	TOKEN_EQ, TOKEN_EQEQ, TOKEN_NEQ, TOKEN_ADDEQ, TOKEN_SUBEQ, TOKEN_MULEQ, TOKEN_DIVEQ, TOKEN_COLEQ /* := */,
	TOKEN_ADD, TOKEN_INC /* ++ */,
	TOKEN_SUB, TOKEN_DEC /* -- */,
	TOKEN_MUL, TOKEN_DIV,

	TOKEN_EOS /* End Of Stream */,
	TOKEN_UNKNOWN
} TokenKind;

typedef enum {
    EXPR_STRING,
    EXPR_INTEGER,
    EXPR_IDENT,
    EXPR_COMPOUND_STMT,
} ExprKind;

typedef enum {
    STMT_FUNCDECL,
    STMT_VARDECLAUTO,
    STMT_EXPR,
} StmtKind;

typedef enum {
    TYPE_INT, TYPE_CSTR, TYPE_CHAR, TYPE_STRING, TYPE_BOOL, TYPE_VOID
} BaseType;
